# Generated by Django 3.2.2 on 2023-08-24 14:15

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodigosPostales',
            fields=[
                ('idCodigoPostal', models.IntegerField(primary_key=True, serialize=False, verbose_name='idCodigoPostal')),
                ('Codigo', models.IntegerField(blank=True, null=True, verbose_name='Codigo')),
                ('Municipio', models.CharField(blank=True, max_length=128, null=True, verbose_name='Municipio')),
                ('Estado', models.CharField(blank=True, max_length=128, null=True, verbose_name='Estado')),
                ('Colonia', models.CharField(blank=True, max_length=128, null=True, verbose_name='Colonia')),
            ],
            options={
                'verbose_name': 'CodigoPostal',
                'verbose_name_plural': 'CodigosPotales',
                'db_table': 'CodigosPostales',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name_m', models.CharField(max_length=64, null=True, verbose_name='Apellido Materno')),
                ('calle', models.CharField(max_length=128, null=True, verbose_name='Calle')),
                ('noExt', models.CharField(default='SN', max_length=15, verbose_name='No exterior')),
                ('noInt', models.CharField(default='SN', max_length=15, verbose_name='No interior')),
                ('codigoPostal', models.CharField(blank=True, max_length=5, null=True, verbose_name='Codigo Postal')),
                ('municipio', models.CharField(blank=True, max_length=128, null=True, verbose_name='Municipio')),
                ('estado', models.CharField(blank=True, max_length=64, null=True, verbose_name='Estado')),
                ('colonia', models.CharField(blank=True, max_length=128, null=True, verbose_name='Colonia')),
                ('telefonoTrabajo', models.CharField(max_length=10, null=True, verbose_name='Telefono de trabajo')),
                ('tipoEmpleado', models.CharField(choices=[('ADMINISTRADOR', 'Administrador'), ('ATENCIONCLIENTES', 'Atención a clientes'), ('COORDINADOR', 'Coordinador'), ('EJECUTIVO', 'Ejecutivo'), ('EJECUTIVOTOTAL', 'Ejecutivo Total'), ('FINANZAS', 'Finanzas'), ('MERCADOTECNIA', 'Mercadotecnia'), ('MESA DE CONTROL', 'Mesa de Control'), ('RH', 'Recursos Humanos'), ('SISTEMAS', 'Sistemas'), ('EJECUTIVO TOLUCA', 'Ejecutivo Toluca'), ('COORDINADOR TOLUCA', 'Coordinador Toluca'), ('MESA DE CONTROL TOLUCA', 'Mesa de control Toluca'), ('ATENCIONCLIENTESTOL', 'Atención a clientes Toluca'), ('EJECUTIVO ATIZAPAN', 'Ejecutivo Atizapan'), ('COORDINADOR ATIZAPAN', 'Coordinador Atizapan'), ('MESA DE CONTROL ATIZAPAN', 'Mesa de control Atizapan'), ('ATENCIONCLIENTESATIZ', 'Atención a clientes Atizapan')], default='Ejecutivo', max_length=25, verbose_name='Tipo de Empleado')),
                ('genero', models.CharField(choices=[('Hombre', 'Hombre'), ('Mujer', 'Mujer')], default='Hombre', max_length=10, verbose_name='Genero')),
                ('telefonoPersonal', models.CharField(max_length=10, null=True, verbose_name='Telefono personal')),
                ('curp', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CURP')),
                ('fechaNacimiento', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Fecha de nacimiento')),
                ('edad', models.IntegerField(blank=True, default=18, verbose_name='Edad')),
                ('telefonoEmergencia', models.CharField(blank=True, max_length=10, null=True, verbose_name='Telefono de Emergencia')),
                ('nombreReferencia', models.CharField(blank=True, max_length=64, null=True, verbose_name='Nombre De Referencia')),
                ('parentesco', models.CharField(blank=True, max_length=64, null=True, verbose_name='Parentesco')),
                ('token', models.UUIDField(blank=True, editable=False, null=True)),
                ('generated_username', models.CharField(blank=True, max_length=100)),
                ('generated_password', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
